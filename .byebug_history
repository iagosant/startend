exit
a
continue
a
continue
shift.datetime.strftime('%A')
a
guard
exit
count
a
continue
monday
count
a
continue
a
monday
shift.on_shift
shift.datetime.strftime('%A')
a
count
continue
shift
guard
count
exit
a[i]
a[0]
monday
a
continue
i
a[i]= monday
i
a
monday
shift.datetime.strftime('%A')
continue
guard
a
exit
b = []
a[0]
a[2]
a[count_monday]
count_monday
a
continue
count_monday
a
continue
a
continue
shift.datetime.strftime('%A')
shift.datetime.strftime('%m/%d/%Y')
a
continue
guard
exit
guard
a
count_monday
continue
guard.shifts
guard
exit
guard.shifts
guard.shift
guard
exit
guard.shift.length
guard.shift.count
a
continue
shift.datetime.strftime('%A')
guard.shifts
guard.shift
guard
exit
shift
shift.datetime.strftime('%A')
guard
count_monday
count_count_monday
a
continue
a
shift
guard
shift.datetime.strftime('%A')
continue
shift
shift.on_shift
guard
shift.datetime.strftime('%A')
exit
a
continue
a
continue
a
continue
a
continue
a
continue
a
exit
guard
a
continue
a
exit
a
continue
guard
a.length
a
exit
continueexit
continue
guard
continue
guard
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
guard
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
exit
c
a
continue
a
continue
a
continue
a
continue
a
continue
a
continue
shift
a
continue
a
continue
a
continue
continur
a
exit
c= shift.on_shift ? true:false 
shift.on_shift? true:false 
shift.on_shift
shift
if shift.on_shift
guard
a
continue
a
continue
all_shifts.count
shift.datetime.strftime('%d')
a
shift.datetime.strftime('%A')
all_shifts
all_shift
Shift.all
guard
a
continue
a
continue
a
exit
a
continue
a
continue
a
exit
min >=51 || min <=5
min
time
exit
shift.datetime.strftime('%d').to_i
shift
chift
exit
continue
min
continue
time
continue
time
continue
time
continue
time
continue
time
continue
min
continue
time
continue
time
continue
time
continue
time
min
continue
