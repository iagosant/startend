continue

user && user.authenticate(params[:password])
continue
user.id
user && user.authenticate(params[:password])
continue
user.authenticate(params[:password])
user && user.authenticate(params[:password])
 user = User.find_by_email(params[:email])
user.authenticate(params[:password])
 User.find_by_email(params[:email])
params[:email]
continue
@logged_user.role == "master" || @logged_user == @user
 @logged_user.role
"master" || @logged_user == @user
@logged_user == @user
continue
current
model
midel

@logged_user.role
@logged_user
continue
@logged_user.role
@logged_user
continue
@logged_user.role
@logged_user
continue
current
continue
@user
@user.role
@user
continue
@user.role
@user
continue
@user
model
current
continue
@user
current_user
continue
@user
current_user
exit
continue
week_per_guard = find_shifts(guard.guard_id, week_number, all_shifts)
all_shifts = shifts_by_date.where(guard_id: guard.guard_id, site_id: site.site_id)
guard
guards
exit
shifts_by_date.where(guard_id: guard, site_id:site.site_id)exit
guard
shifts_by_date.where(guard_id: guard, site_id:site.site_id)
guards
continue
continua
shifts_by_date.select(:guard_id).uniq { |m| m.site_id  == site.site_id }
site
sites
continue
sites
site
sites = shifts_by_date.select("site_id").uniq
ites = shifts_by_date.select("site_id").uniq
shifts_by_date.select("site_id")
shifts_by_date.select("site_id").uniq
shifts_by_date.all
continue
@session
continue
session[:user_id]
session
continue
session
exit
Session.find(params[:id])
continue
user_params
continue
user_params
continue
user_params
continue
user_params
exit
user_params
exit
 respond_with :json => {:data => @shifts_by_date}
 render :json => {:data => @shifts_by_date}
 render :json => {:@data => @shifts_by_date}
@shifts_by_date
@data
continue
 all_shifts
exit
 all_shifts = shifts_by_date.sort_by{|t| t.datetime}
shifts_by_date
week_number
guard
continue
all_shifts.sort_by{|t| t.datetime}
all_shifts
exit
Time.at(date) + 7.days
Time.at(date)
Shift.where(:datetime => date..Time.at(date) + 7.days, :site_id => site_id
Shift.where(:datetime => Time.at(date)..Time.at(date) + 7.days, :site_id => site_id  )
week
continue
date_m = (date.strftime('%Y-')+date.strftime('%m-')+day_0.to_s).to_time
day_0 = date.strftime('%d').to_i - (date.strftime('%w').to_i-1)
   12:     date_m = (date.strftime('%Y-')+date.strftime('%m-')+day_0.to_s).to_time
 day_0 = date.strftime('%d').to_i - (date.strftime('%w').to_i-1)
date_m
date
exit
date_m = ( date.strftime('%y-')+ date.strftime('%m-') +day_0.to_s).to_time
date_m = date.strftime('%m/') + day_0.to_s + date.strftime('/%y')
params[:date]
date_m.to_time
date_m = date_m.to_time
date_m
date_m = date.strftime('%m/') + day_0.to_s + date.strftime('/%y')
day_0 = date.strftime('%d').to_i - (date.strftime('%w').to_i-1)
date.strftime('%w').to_i-1
date.strftime('%d').to_i
date.strftime('%d')
date
exit
week
exit
Shift.where(:datetime => Time.at(date)..Time.at(date) + 7.days, :site_id => 1 )
site
Shift.where(:datetime => Time.at(date)..Time.at(date) + 7.days, :site_id => Site.find_by(name: site).id  )
Shift.all
@shifts_by_date
csv
continue
csv
continue
csv
shift_info
shift_info[0]
site
shift.attributes.values_at(*att_site)
shift
csv
continue
target_date
continue
target_date
continue
@search
continue
params
continue
@search
continue
params
continue
@search
continue
@search
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
exit
params
continue
params
paramparams
week
exit
week
exit
continur
continue
week
continue
week
guard_id
continue
find_shifts(guard.guard_id, week_number, shifts_by_date)
guard.guard_id
continue
guard.guard_id
continue
guard.guard_id
continue
guard.guard_id
continue
guard.guard_id
continue
exit
guard
guard.guard_id
count
guards.length
guards
shifts_by_date
week_number
guard.guard_id
find_shifts(guard.guard_id, week_number, shifts_by_date)
week
 week_per_guard
continue
 week_per_guard
continue
 week_per_guard
continue
 week_per_guard
exit
week_per_guard.length
continue
week_per_guard.length
continue
week_per_guard.length
continue
week
continue
week
wee
week_per_guard
continue
week_per_guard
exit
week[0][1][1]
week[0]
week.length
week
continue
week_per_guard.length
week_per_guard
continue
shift.datetime
continue
all_shifts.length != 0
continue
all_shifts.length
all_shifts.all.length
<<<<<<< HEAD
=======
all_shifts = all_shifts.sort_by{|t| t.datetime}
all_shifts
  all_shifts = shifts_by_date.where(guard_id: guard)
all_shifts.all.length != 0
shifts_by_date.where(guard_id: guard)
date
continue
week.length != 0
week.length
week
continue
shifts_by_date.all.length != 0
continue
shifts_by_date.all.length
shifts_by_date= Shift.where(:datetime => Time.at(date)..Time.at(date) + 7.days, :site_id => site_id)
shifts_by_date.all.length
site
date
Shift.where(:datetime => Time.at(date)..Time.at(date) + 7.days, :site_id => site_id)
week = []
>>>>>>> master
