continue
pdf
exit
        )exit
        render_to_string('shifts/index.html.erb', layout: false)
WickedPdf.new.pdf_from_string(
format
shifts/index.html.erb
pdf
exit
@ordered_shifts.where(guard_id: 1)
@ordered_shifts
exit
ordered_shifts
ordered_shifts.where(guard_id: a)
a.id
a = Guard.first
ordered_shifts.where(guard_id: Guard.first.id)
ordered_shifts
exit
xit
Shift.all
Shift.alll
exit
Shift.all
f_to_l_shifts
exit
Shift.all
f_to_l_shifts
all_shifts
exit
Shift.all
f_to_l_shifts
exit
Shift.all.group_by { |t| t.datetime }
Shift.all
continue
csv
exit
Shift.all.group_by { |t| t.datetime }
Shift.all
continue
Shift.all.group_by { |t| t.datetime }
Shift.all.order(start: :desc)
Shift.all
Shift.all.sort! { |a,b|  DateTime.parse(a['date']) <=> DateTime.parse(b['date']) }
Shift.all.sort
Shift.all
exit
continue
cotniue
csv_first_to_last
csv
exit
csv_first_to_last
exit
shift
continue
row
exit
row
exit
csv_first_to_last
csv
exit
csv
csv.sort
csv
exit
separated
row
@week
continue
@week
continue
@week
continue
@week
continue
@week
continue
@week
continue
@week
continue
@week
continue
@week
shift
exit
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
continue
shift.guard
shift
@week
exit
shift
@week
exit
@week
exit
shift.site.codename
shift.site
shift
@week
continue
@week
continue
@week
continue
@week
continue
@week
exit
datetime
dt
exit
separated[2]
separated[2].split
dt
separated[2]
separated
separated[1]
time
row[1]
row
date
dt
exit
datetime
exit
datetime
dt
time
date
exit
datetime
continue
datetime
continue
row
exit
continue
csv
exit
csv.sort
csv
sorted_csv
date
exit
shift_info
dt
td
exit
dt
continue
dt
continue
dt
continue
dt
continue
dt
continue
dt
continue
dt
continue
dt
continue
contunue
dt
continue
dt
continue
DateTime.strptime(dt, '%m/%d/%Y %H:%M %p')
dt
continue
continue'
dt
continue
DateTime.strptime(dt, '%m/%d/%Y %H:%M %p')
dt
exit
DateTime.strptime(dt, '%m/%d/%Y %H:%M %p')
dt
exit
dt
exit
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
