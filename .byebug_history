continue
hash
continue
h
exit
continue
csv
sorted_csv
exit
Shift.last
continue
Shift.last
continue
Shift.all
Shift.last
exit
con
@first_name
datetime
continue
@first_name
first_name
datetime
exit
guard_name
@last_name
exit
n[0]
separated
row
sorted_csv
pre_sorted_csv
exit
current_schedule
exit
Schedule.all.length
Schedule.all
continue
current_schedule
exit
Shift.find_by(schedule_id: Schedule.find_by(datetime: sch).id)
sch
current_schedule
exit
guard_namee
guard_name
@current_user
@first_name
exit
User.last
@new_user
exit
current_schedule
Schedule.find_by(datetime: sch)
sch
current_schedule
continue
current_schedule
continue
current_schedule
exit
continue
Shift.where(schedule_id: Schedule.find_by(datetime: sch).id, user_id: User.find_by(first_name: @first_name, last_name: @last_name).id)
exit
continue
Shift.where(schedule_id: Schedule.find_by(datetime: sch).id, user_id: User.where(first_name: @first_name, last_name: @last_name)).id
sch
continue
sch
datetime
exit
@format_name
@current_user
continue
Schedule.all
continue
Schedule.first
exit
sch
exit
Schedule.find_by(datetime: datetime) == nil
@current_user == format_name
exit
separated[3]
separated
separated[4]
format_name
continue
format_name
separated[4] == format_name
separated[4] = format_name
seaprated[4] = format_name
format_name
guard_name
full_name
guard_name == full_name
guard_name
separated
@new_user
continue
Schedule.all.length
Schedule.all
continue
Schedule.all
Schedule.last
continue
sch
Schedule.last
continue
Schedule.find_by(datetime: datetime).id
Schedule.find_by(datetime: datetime)
datetime
Schedule.last
@all_schedules
@new_schedule
exit
Schedule.where(id: Shift.last.schedule_id)
Shift.last.schedule_id
Shift.last
Shift.all
continue
Schedule.all
exit
Schedule.first
Schedule.all
continue
Schedule.all
exit
Schedule.find_by(datetime: sch)
sch
Schedule.last
exit
Schedule.find_by(datetime: sch)
Scheudle.find_by(datetime: sch)
Schedule.find_by(datetime: 'Mon, 25 Apr 2016 11:01:00 +0000')
Schedule.find_by(datetime: Mon, 25 Apr 2016 11:01:00 +0000)
Scheudle.find_by(datetime: 'Mon, 25 Apr 2016 11:01:00 +0000')
Scheudle.find_by(datetime: Mon, 25 Apr 2016 11:01:00 +0000)
continue
Scheudle.find_by(datetime: sch)
sch
exit
eixt
sch
exit
Schedule.last
datetime
Schedule.last
continue
Schedule.last
datetime
continue
Schedule.last
datetime
time
exit
datetime
continue
datetime
continue
datetime
continue
datetime
continue
datetime
exit
datetime ime = separated[2].split.first
DateTime.strptime(str, '%m/%d/%Y %H:%M')
str = "#{date} #{time}"
date = separated[1]
time = separated[2].split.first
time = separated[1]
date
time = separated[2].split.first
Time.parse('separated[2].split.first', '%H.%M')
separated[2].split.first
separated[2].split[0]
separated[2].split
separated[2]
Time.parse('separated[2]', '%H.%M')
separated
Time.parse('separated[2]', '%H.%M.%S')
Time.parse('t', '%H.%M.%S')
Time.parse(t, '%H:%M')
Time.parse(t, %H:%M)
datetime
d
date
Time.parse(time)
time
date
Time.parse("separated[1], separated[2]")
Time.parse("separated[1]")
Time.parse(separated[1])
Time.parse(t)
Time.parse("d")
Time.parse(d)
Time.parse(datetime)
datetime = "#{d} #{t}"
t = separated[2]
d = separated[1]
separated
time
date
continue
date
exit
t
Time.parse(t)
date
time = Time.strptime(time, "%H:%M:%S")
time = Time.strftime(time, "%H:%M:%S")
t = separated[2]
date
separated[2].strftime("%H:%M:%S")
separated[2].strftime
separated[2].class
separated[2]
separated.[2]
separated
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
continue
User.all
