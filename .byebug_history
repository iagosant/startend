exit
<<<<<<< HEAD
continue
@week
exit
@week
continue
@week
continue
@week
exit
continue
continued
@week["monday-on"]
all_shifts
@week["s"]
=======
@week["monday_off"]
>>>>>>> 1e9749335c505149e0c3ab90f09bb843006c05d3
@week
continue
@week
continue
shift.datetime.strftime('%H:%M')
time
@week
continue
shift
time
continue
time
shift.datetime.strftime('%H:%M')
shift
all_shifts
shift
shift.datetime.strftime('%A')
shift.datetime.strftime('%H:%M')
shift.datetime
shift
continue
shift
time
continue
@week
continue
@week
all_shifts
continue
@week
exit
continue
all_shifts
shift
@week
continue
@week
exit
continue
sorted_csv
continue
day
continue
day
continue
day
continue
day
continue
day
continue
day
continue
day
continue
day
continue
day
continue
day_of_the_week
continue
day_of_the_week
continue
@shifts
exit
hash
continue
hash
continue
h
exit
continue
csv
sorted_csv
exit
Shift.last
continue
Shift.last
continue
Shift.all
Shift.last
exit
con
@first_name
datetime
continue
@first_name
first_name
datetime
exit
guard_name
@last_name
exit
n[0]
separated
row
sorted_csv
pre_sorted_csv
exit
current_schedule
exit
Schedule.all.length
Schedule.all
continue
current_schedule
exit
Shift.find_by(schedule_id: Schedule.find_by(datetime: sch).id)
sch
current_schedule
exit
guard_namee
guard_name
@current_user
@first_name
exit
User.last
@new_user
exit
current_schedule
Schedule.find_by(datetime: sch)
sch
current_schedule
continue
current_schedule
continue
current_schedule
exit
continue
Shift.where(schedule_id: Schedule.find_by(datetime: sch).id, user_id: User.find_by(first_name: @first_name, last_name: @last_name).id)
exit
continue
Shift.where(schedule_id: Schedule.find_by(datetime: sch).id, user_id: User.where(first_name: @first_name, last_name: @last_name)).id
sch
continue
sch
datetime
exit
@format_name
@current_user
continue
Schedule.all
continue
Schedule.first
exit
sch
exit
Schedule.find_by(datetime: datetime) == nil
@current_user == format_name
exit
separated[3]
separated
separated[4]
format_name
continue
format_name
separated[4] == format_name
separated[4] = format_name
seaprated[4] = format_name
format_name
guard_name
full_name
guard_name == full_name
guard_name
separated
@new_user
continue
Schedule.all.length
Schedule.all
continue
Schedule.all
Schedule.last
continue
sch
Schedule.last
continue
Schedule.find_by(datetime: datetime).id
Schedule.find_by(datetime: datetime)
datetime
Schedule.last
@all_schedules
@new_schedule
exit
Schedule.where(id: Shift.last.schedule_id)
Shift.last.schedule_id
Shift.last
Shift.all
continue
Schedule.all
exit
Schedule.first
Schedule.all
continue
Schedule.all
exit
Schedule.find_by(datetime: sch)
sch
Schedule.last
exit
Schedule.find_by(datetime: sch)
Scheudle.find_by(datetime: sch)
Schedule.find_by(datetime: 'Mon, 25 Apr 2016 11:01:00 +0000')
Schedule.find_by(datetime: Mon, 25 Apr 2016 11:01:00 +0000)
Scheudle.find_by(datetime: 'Mon, 25 Apr 2016 11:01:00 +0000')
Scheudle.find_by(datetime: Mon, 25 Apr 2016 11:01:00 +0000)
continue
Scheudle.find_by(datetime: sch)
sch
exit
eixt
sch
exit
Schedule.last
datetime
Schedule.last
continue
Schedule.last
datetime
continue
Schedule.last
datetime
time
exit
datetime
continue
datetime
continue
datetime
continue
datetime
continue
datetime
exit
datetime ime = separated[2].split.first
DateTime.strptime(str, '%m/%d/%Y %H:%M')
str = "#{date} #{time}"
date = separated[1]
time = separated[2].split.first
time = separated[1]
date
time = separated[2].split.first
Time.parse('separated[2].split.first', '%H.%M')
<<<<<<< HEAD
=======
separated[2].split.first
separated[2].split[0]
separated[2].split
separated[2]
Time.parse('separated[2]', '%H.%M')
separated
Time.parse('separated[2]', '%H.%M.%S')
Time.parse('t', '%H.%M.%S')
Time.parse(t, '%H:%M')
Time.parse(t, %H:%M)
datetime
d
date
>>>>>>> 1e9749335c505149e0c3ab90f09bb843006c05d3
