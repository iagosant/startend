exit
Shift.last
row
continue
Shift.last
row
continue
row
Shift.all
exit
xit
exit
Shift.last
Shift.all
exit
Shift.all.count
Shift.first
Shift.all
exit
row
continue
Shift.all
exit
shift_check
row
exit
shift_check
exit
shift_check
on_shift
exit
DateTime.strptime(dt, '%m/%d/%Y %H:%M %p')
dt
time
date
exit
Guard.all
row
continue
row
continue
row
continue
row
Guard.all
continue
Guard.all
exit
Guard.reset_pk_sequence
Guard.reset_pk
Guard.delete_all
Guard.all
exit
first_name
last_name
full_name
exit
name.to_s.downcase.split.map(&:capitalize).join(' ')
name.split(" ")
name.split(":")
name.split(":")[1].to_s.strip!
name = separated[3]
separated[3].split(":")[1].to_s.strip!
separated[3]
format_name
exit
separated[3]
separated[4]
separated
format_name[0]
format_name[1]
format_name
exit
format_name
exit
Site.all
continue
exit
short
site
continue
exit
separated.first
separated
continue
exit
row
continue
csv
continue
file
exit
continue
separated
assignment
datetime
separated
row
exit
separated[1]
date
separated
datetime
exit
separated[2]
separated[1]
separated[5]
separated
separated.last.split(":")
separated.last.split(":")[1].to_s.strip!
format_name
separated
separated.last.split(":")
separated.last.split(":")[1].to_s.strip!
separated
row
exit
continue
csv.first
csv.shift
csv
exit
csv.shift
CSV.parse(csv_text)
csv_text
csv
row
exit
separated
row
continue
row
continue
exit
separated.last.split(":")[1].to_s.strip!
row.separated.last.split(":")[1].to_s.strip!
row
continue
row
continue
row
continue
row
exit
row
continue
row
continue
row
continue
row
continue
row
continue
row
continue
csv
exit
separated[4].chomp == "Device Assignment"
separated[4].chomp
separated[4]
separated
format_name
row
continue
row
continue
row
continue
row
ow
short
exit
row
continue
row
continue
row
csv
continue
csv
exit
csv.order
csv
continue
continuye
file
continue
pdf
exit
        )exit
        render_to_string('shifts/index.html.erb', layout: false)
WickedPdf.new.pdf_from_string(
format
shifts/index.html.erb
pdf
exit
@ordered_shifts.where(guard_id: 1)
@ordered_shifts
exit
ordered_shifts
ordered_shifts.where(guard_id: a)
a.id
a = Guard.first
ordered_shifts.where(guard_id: Guard.first.id)
ordered_shifts
exit
xit
Shift.all
Shift.alll
exit
Shift.all
f_to_l_shifts
exit
Shift.all
f_to_l_shifts
all_shifts
exit
Shift.all
f_to_l_shifts
exit
Shift.all.group_by { |t| t.datetime }
Shift.all
continue
csv
exit
Shift.all.group_by { |t| t.datetime }
Shift.all
continue
Shift.all.group_by { |t| t.datetime }
Shift.all.order(start: :desc)
Shift.all
Shift.all.sort! { |a,b|  DateTime.parse(a['date']) <=> DateTime.parse(b['date']) }
Shift.all.sort
Shift.all
exit
continue
cotniue
csv_first_to_last
csv
exit
csv_first_to_last
exit
shift
continue
row
exit
row
exit
csv_first_to_last
csv
exit
csv
csv.sort
csv
exit
